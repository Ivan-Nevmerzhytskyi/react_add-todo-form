{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","titleInput","setTitleInput","selectedUser","setSelectedUser","visibleTodos","setVisibleTodos","isTitleError","setIsTitleError","isUserError","setIsUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","reduce","maxId","Math","max","prevState","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8577c90.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [titleInput, setTitleInput] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleInput(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleSelectedUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setIsUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsTitleError(titleInput.trim() === '');\n    setIsUserError(selectedUser === 0);\n\n    if (!titleInput.trim() || !selectedUser) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: visibleTodos.reduce((maxId, todo) => Math.max(maxId, todo.id), 0) + 1,\n      userId: selectedUser,\n      title: titleInput,\n      completed: false,\n      user: getUser(selectedUser),\n    };\n\n    setVisibleTodos(prevState => [\n      ...prevState,\n      newTodo,\n    ]);\n    setTitleInput('');\n    setSelectedUser(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            name=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleInput}\n            onChange={handleTitleInput}\n          />\n\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            name=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleSelectedUser}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}